from math import gcd
from functools import reduce

e = 65537
pairs = [
    (str(61),1894792376935242028465556366618011019548511575881945413668351305441716829547731248120542989065588556431978903597240454296152579184569578379625520200356186),
    (str(62),851992879179488480924931526330455538592762608496783380067377309746890611786399664808324043270356878711820024924791940001427666209616488708970666420225203),
    (str(67),1776377687395310509014172661190571355386473310466573678488256836244457193258138461515062113413122207997745517955910134436260139700186493893848042378705963),
    ]

xs = [pow(int(m,16), e) - c for m, c in pairs]
n = reduce(gcd, xs)
r=2
c=input("c:")
if(gcd(n,r)==1):
    C=c*r**e%n
    print("C:",C)
    M=input("M:")
    m=int(M,16)*(r**-1)%n



byte_len = (int(m).bit_length() + 7) // 8
data = int(m).to_bytes(byte_len, byteorder='big')
text = data.decode('utf-8')
print("key:",text)